window.onhashchange=function(){var $t,map,item;HashMapper.MapInfo.currentHashLocation=window.location.hash;for(var currentRunningMapInfos=new(System.Collections.Generic.List$1(HashMapper.MapInfo)),hashs=HashMapper.MapInfo.currentHashLocation.split(HashMapper.MapInfo.hashSeperator),i,hashLength=hashs.length,mapLength=HashMapper.MapInfo.mappings.getCount(),y=0;y<mapLength;y=y+1|0)for(i=0;i<hashLength;i=i+1|0)try{if(Bridge.referenceEquals(HashMapper.MapInfo.mappings.getItem(y)._hash,hashs[i])){map=HashMapper.MapInfo.mappings.getItem(y);HashMapper.MapInfo.previousRanMapInfos.contains(map)||Bridge.staticEquals(map.getOnNavigated(),null)||map.getOnNavigated()(map);currentRunningMapInfos.add(map);break}}catch($e1){$e1=System.Exception.create($e1)}for($t=Bridge.getEnumerator(HashMapper.MapInfo.previousRanMapInfos);$t.moveNext();)item=$t.getCurrent(),currentRunningMapInfos.contains(item)||Bridge.staticEquals(item.getOnLeft(),null)||item.getOnLeft()(item);HashMapper.MapInfo.previousRanMapInfos=currentRunningMapInfos;HashMapper.MapInfo.previousHashLocation=window.location.hash};Bridge.assembly("HashMapper",function(){"use strict";Bridge.define("HashMapper.MapInfo",{statics:{mappings:null,previousHashLocation:null,currentHashLocation:null,previousRanMapInfos:null,hashSeperator:"-",config:{init:function(){this.mappings=new(System.Collections.Generic.List$1(HashMapper.MapInfo));this.previousRanMapInfos=new(System.Collections.Generic.List$1(HashMapper.MapInfo))}}},_hash:null,config:{properties:{OnNavigated:null,OnLeft:null}},$ctor1:function(hash,onNavigated,onLeft){onNavigated===void 0&&(onNavigated=null);onLeft===void 0&&(onLeft=null);this.$initialize();this._hash=hash;this.setOnNavigated(onNavigated);this.setOnLeft(onLeft)},ctor:function(hash,onNavigated){this.$initialize();this._hash=hash;this.setOnNavigated(onNavigated)},getHash:function(){return this._hash}})});